#Alina
from collections import Counter
w = []
for i in range(int(input())):
    w.extend(input().split())
counter = Counter(w)
pairs = [(-pair[1], pair[0]) for pair in counter.most_common()]
w = [pair[1] for pair in sorted(pairs)]
print('\n'.join(w))


#Hapilin
b = dict()
for i in range(int(input())):
    a = [str(i) for i in input().split()]
    for j in a:
        if j not in b:
            b.update({j : 1})
        else:
            b.update({j : b[j]+1})

for i in range(max(b.values()),-1,-1):
    znach = []
    if i in b.values():
        for a,c in b.items():
            if c == i:
                znach.append(a)
        for j in sorted(znach):
            print(j)
            

from collections import Counter

words = []
for _ in range(int(input())):
    words.extend(input().split())

counter = Counter(words)
pairs = [(-pair[1], pair[0]) for pair in counter.most_common()]
words = [pair[1] for pair in sorted(pairs)]
print('\n'.join(words))


d = {}
for _ in range(int(input())):
    line = input().split()
    for word in line:
        d[word] = d.get(word, 0) + 1
lst = []
import operator
for x, y in d.items():
    lst.append((-y,x))

for x in sorted(lst):
    print(x[1])


a = {}
b = []
c = []
for i in range(int(input())):
    for elem in input().split():
        a[elem] = a.get(elem,0) + 1
for i in a:
    b.append([a[i], i])
b = sorted(b,reverse = True)
for i in range(1,len(b)):
    if b[i][0] == b[i - 1][0]:
        c.append(b[i - 1][1])
        if i == len(b) - 1:
            c.append(b[i][1])
            for s in range(len(c) - 1, -1, -1):
                print(c[s])
    else:
        c.append(b[i - 1][1])
        for s in range(len(c) - 1, -1, -1):
            print(c[s])
        c=[]
if len(b) == 1:
    print(b[0][1])



